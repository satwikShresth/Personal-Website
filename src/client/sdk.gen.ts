// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from '@hey-api/client-axios'
import type {
  GetBrawlersData,
  GetBrawlersResponse,
  GetBrawlersError,
  GetClubMembersData,
  GetClubMembersResponse,
  GetClubMembersError,
  GetBattleLogData,
  GetBattleLogResponse,
  GetBattleLogError,
  GetPlayerData,
  GetPlayerResponse,
  GetPlayerError,
  GetScheduledEventsData,
  GetScheduledEventsResponse,
  GetScheduledEventsError,
  GetClubData,
  GetClubResponse,
  GetClubError,
  GetClubRankingsData,
  GetClubRankingsResponse,
  GetClubRankingsError,
  GetBrawlerRankingsData,
  GetBrawlerRankingsResponse,
  GetBrawlerRankingsError,
  GetBrawlerData,
  GetBrawlerResponse,
  GetBrawlerError,
  GetPlayerRankingsData,
  GetPlayerRankingsResponse,
  GetPlayerRankingsError,
} from './types.gen'
import { client as _heyApiClient } from './client.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

export class BrawlersService {
  /**
   * Get list of available brawlers.
   * Get list of available brawlers.
   */
  public static getBrawlers<ThrowOnError extends boolean = false>(
    options?: Options<GetBrawlersData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetBrawlersResponse,
      GetBrawlersError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/brawlers',
      ...options,
    })
  }

  /**
   * Get information about a brawler.
   * Get information about a brawler.
   */
  public static getBrawler<ThrowOnError extends boolean = false>(
    options: Options<GetBrawlerData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetBrawlerResponse,
      GetBrawlerError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/brawlers/{brawlerId}',
      ...options,
    })
  }
}

export class ClubsService {
  /**
   * List club members.
   * List club members.
   */
  public static getClubMembers<ThrowOnError extends boolean = false>(
    options: Options<GetClubMembersData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetClubMembersResponse,
      GetClubMembersError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/clubs/{clubTag}/members',
      ...options,
    })
  }

  /**
   * Get club information.
   * Get information about a single clan by club tag. Club tags can be found in game. Note that clan tags start with hash character '#' and that needs to be URL-encoded properly to work in URL, so for example clan tag '#2ABC' would become '%232ABC' in the URL.
   *
   */
  public static getClub<ThrowOnError extends boolean = false>(
    options: Options<GetClubData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetClubResponse,
      GetClubError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/clubs/{clubTag}',
      ...options,
    })
  }
}

export class PlayersService {
  /**
   * Get log of recent battles for a player.
   * Get list of recent battle results for a player. NOTE: It may take up to 30 minutes for a new battle to appear in the battlelog.
   *
   */
  public static getBattleLog<ThrowOnError extends boolean = false>(
    options: Options<GetBattleLogData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetBattleLogResponse,
      GetBattleLogError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/players/{playerTag}/battlelog',
      ...options,
    })
  }

  /**
   * Get player information
   * Get information about a single player by player tag. Player tags can be found either in game or by from clan member list.
   *
   */
  public static getPlayer<ThrowOnError extends boolean = false>(
    options: Options<GetPlayerData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetPlayerResponse,
      GetPlayerError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/players/{playerTag}',
      ...options,
    })
  }
}

export class EventsService {
  /**
   * Get event rotation
   * Get event rotation for ongoing events.
   */
  public static getScheduledEvents<ThrowOnError extends boolean = false>(
    options?: Options<GetScheduledEventsData, ThrowOnError>,
  ) {
    return (options?.client ?? _heyApiClient).get<
      GetScheduledEventsResponse,
      GetScheduledEventsError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/events/rotation',
      ...options,
    })
  }
}

export class RankingsService {
  /**
   * Get club rankings for a country or global rankings.
   * Get club rankings for a country or global rankings.
   */
  public static getClubRankings<ThrowOnError extends boolean = false>(
    options: Options<GetClubRankingsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetClubRankingsResponse,
      GetClubRankingsError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/rankings/{countryCode}/clubs',
      ...options,
    })
  }

  /**
   * Get brawler rankings for a country or global rankings.
   * Get brawler rankings for a country or global rankings. Brawler identifiers can be found by using the /v1/brawlers API endpoint.
   *
   */
  public static getBrawlerRankings<ThrowOnError extends boolean = false>(
    options: Options<GetBrawlerRankingsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetBrawlerRankingsResponse,
      GetBrawlerRankingsError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/rankings/{countryCode}/brawlers/{brawlerId}',
      ...options,
    })
  }

  /**
   * Get player rankings for a country or global rankings.
   * Get player rankings for a country or global rankings.
   */
  public static getPlayerRankings<ThrowOnError extends boolean = false>(
    options: Options<GetPlayerRankingsData, ThrowOnError>,
  ) {
    return (options.client ?? _heyApiClient).get<
      GetPlayerRankingsResponse,
      GetPlayerRankingsError,
      ThrowOnError
    >({
      security: [
        {
          name: 'authorization',
          type: 'apiKey',
        },
      ],
      url: '/rankings/{countryCode}/players',
      ...options,
    })
  }
}

